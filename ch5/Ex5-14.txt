(load "./machine2.scm")
(define fact-machine
  (make-machine
   (list (list '= =)
         (list '- -)
         (list '* *)
         (list 'read read)
         (list 'print print))
   '(controller
     fact-start
       (perform (op initialize-stack))
       (assign continue (label fact-done))
       (assign n (op read))
     fact-loop
       (test (op =) (reg n) (const 1))
       (branch (label base-case))
       (save continue)
       (save n)
       (assign n (op -) (reg n) (const 1))
       (assign continue (label after-fact))
       (goto (label fact-loop))
     after-fact
       (restore n)
       (restore continue)
       (assign val (op *) (reg n) (reg val))
       (goto (reg continue))
     base-case
       (assign val (const 1))
       (goto (reg continue))
     fact-done
       (perform (op print-stack-statistics))
       (perform (op print) (reg val))
       (goto (label fact-start)))))
(start fact-machine)


;; Execusion:
;; (load "./machine2.scm")
;; (define fact-machine
;;   (make-machine
;;    (list (list '= =)
;; #t
;;          (list '- -)
;;          (list '* *)
;;          (list 'read read)
;;          (list 'print print))
;;    '(controller
;;      fact-start
;;        (perform (op initialize-stack))
;;        (assign continue (label fact-done))
;;        (assign n (op read))
;;      fact-loop
;;        (test (op =) (reg n) (const 1))
;;        (branch (label base-case))
;;        (save continue)
;;        (save n)
;;        (assign n (op -) (reg n) (const 1))
;;        (assign continue (label after-fact))
;;        (goto (label fact-loop))
;;      after-fact
;;        (restore n)
;;        (restore continue)
;;        (assign val (op *) (reg n) (reg val))
;;        (goto (reg continue))
;;      base-case
;;        (assign val (const 1))
;;        (goto (reg continue))
;;      fact-done
;;        (perform (op print-stack-statistics))
;;        (perform (op print) (reg val))
;;        (goto (label fact-start)))))
;; fact-machine
;; gosh> (start fact-machine)
;; 2
;; (total-pushes = 2 current-depth = 0 maximum-depth = 2)
;; 2
;; 3
;; (total-pushes = 4 current-depth = 0 maximum-depth = 4)
;; 6
;; 4
;; (total-pushes = 6 current-depth = 0 maximum-depth = 6)
;; 24
;; 5
;; (total-pushes = 8 current-depth = 0 maximum-depth = 8)
;; 120
;; 6
;; (total-pushes = 10 current-depth = 0 maximum-depth = 10)
;; 720
;; 7
;; (total-pushes = 12 current-depth = 0 maximum-depth = 12)
;; 5040
;; 8
;; (total-pushes = 14 current-depth = 0 maximum-depth = 14)
;; 40320
;; 9
;; (total-pushes = 16 current-depth = 0 maximum-depth = 16)
;; 362880
;; 10
;; (total-pushes = 18 current-depth = 0 maximum-depth = 18)
;; 3628800


n     total # of push  max depth of stack
2                   2                   2
3                   4                   4
4                   6                   6
5                   8                   8
..
...


