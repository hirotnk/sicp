(define fact-machine
(make-machine
'(continue n val)
(list (list 'rem remainder) (list '= =) (list '- -) (list '* *))
'(controller
(assign continue (label fact-done)) ;set up final return address
fact-loop
(test (op =) (reg n) (const 1))
(branch (label base-case))
(save continue)
(save n)
(assign n (op -) (reg n) (const 1))
(assign continue (label after-fact))
(goto (label fact-loop))
after-fact
(restore n)
(restore continue)
(assign val (op *) (reg n) (reg val)) ;val now contains n(n - 1)!
(goto (reg continue)) ;return to caller
base-case
(assign val (const 1)) ;base case: 1! = 1
(goto (reg continue)) ;return to caller
fact-done)))
(set-register-contents! fact-machine 'n 5)
(start fact-machine)
(get-register-contents fact-machine 'val)



