Below is the some experiments on the local amb repl.

;; [/Users/yoshi/gith/sicp/ch4%] rlwrap gosh
;; gosh> (load "./repl-amb")
;; #t
;; gosh> (amb-run)
;; 
;; 
;; ;;; Amb-Eval input:
;; (list (amb 1 2 3) (amb 'a 'b))
;; 
;; ;;; Starting a new problem
;; ;;; Amb-Eval value:
;; (1 a)
;; 
;; ;;; Amb-Eval input:
;; try-again
;; 
;; ;;; Amb-Eval value:
;; (1 b)
;; 
;; ;;; Amb-Eval input:
;; try-again
;; 
;; ;;; Amb-Eval value:
;; (2 a)
;; 
;; ;;; Amb-Eval input:
;; try-again
;; 
;; ;;; Amb-Eval value:
;; (2 b)
;; 
;; ;;; Amb-Eval input:
;; try-again
;; 
;; ;;; Amb-Eval value:
;; (3 a)
;; 
;; ;;; Amb-Eval input:
;; try-again
;; 
;; ;;; Amb-Eval value:
;; (3 b)
;; 
;; ;;; Amb-Eval input:
;; try-again
;; 
;; ;;; There are no more values of
;; (list (amb 1 2 3) (amb 'a 'b))
;; 
;; ;;; Amb-Eval input:
;; try-again
;; 
;; ;;; There is no current problem
;; 
;; ;;; Amb-Eval input:
;; (define (an-integer-starting-from n)
;; (amb n (an-integer-starting-from (+ n 1))))
;; 
;; ;;; Starting a new problem
;; ;;; Amb-Eval value:
;; ok
;; 
;; ;;; Amb-Eval input:
;; (an-integer-starting-from 5)
;; 
;; ;;; Starting a new problem
;; ;;; Amb-Eval value:
;; 5
;; 
;; ;;; Amb-Eval input:
;; try-again
;; 
;; ;;; Amb-Eval value:
;; 6
;; 
;; ;;; Amb-Eval input:
;; try-again
;; 
;; ;;; Amb-Eval value:
;; 7
;; 
;; 
