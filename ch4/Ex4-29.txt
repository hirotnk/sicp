1. without memoization:
;;; L-Eval input:
(define count 0)

;;; L-Eval value:
ok

;;; L-Eval input:
(define (id x) (set! count (+ count 1)) x)

;;; L-Eval value:
ok

;;; L-Eval input:
(define (square x) (* x x))

;;; L-Eval value:
ok

;;; L-Eval input:
(square (id 10))

;;; L-Eval value:
100

;;; L-Eval input:
count

;;; L-Eval value:
2

2. with memoization:
;;; L-Eval input:
(define (id x) (set! count (+ count 1)) x)

;;; L-Eval value:
ok

;;; L-Eval input:
(define (square x) (* x x))

;;; L-Eval value:
ok

;;; L-Eval input:
(define count 0)

;;; L-Eval value:
ok

;;; L-Eval input:
(square (id 10))

;;; L-Eval value:
100

;;; L-Eval input:
count

;;; L-Eval value:
1

